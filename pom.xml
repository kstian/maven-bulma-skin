<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.ktarou</groupId>
	<artifactId>maven-bulma-skin</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>Maven Bulma Skin</name>
	<description>Maven site skin based on Bulma css</description>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<site.plugin.version>3.7.1</site.plugin.version>
		<resources.plugin.version>2.7</resources.plugin.version>
		<maven.project.info.reports.plugin.version>2.9</maven.project.info.reports.plugin.version>
		<mpirVersion>2.9</mpirVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<asciidoctor.maven.plugin.version>1.5.7.1</asciidoctor.maven.plugin.version>
		<asciidoctorj.version>1.5.7</asciidoctorj.version>
		<jruby.version>9.1.17.0</jruby.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<delimiters>
						<delimiter>@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<configuration>
					<skipDeploy>true</skipDeploy>
					<!-- Disable changing absolute link to relative -->
					<relativizeDecorationLinks>false</relativizeDecorationLinks>
					<locales>en</locales>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
					<generateReports>false</generateReports>
					<generateProjectInfo>false</generateProjectInfo>
					<asciidoc>
						<requires>
							<require>asciidoctor-diagram</require>
						</requires>
						<!--<backend>html5</backend>-->
						<!-- optional site-wide AsciiDoc attributes -->
						<attributes>
							<outdir>${basedir}/target/site</outdir>
							<imagesdir>./images</imagesdir>
							<!--<icons>font</icons>
							<source-highlighter>coderay</source-highlighter>
							<coderay-css>style</coderay-css>-->
							<toclevels>3</toclevels>
							<!-- Example below shows how to specify in this pom instead of System's PATH, the location of dot command of Graphviz, required by PlantUML libraries -->
							<!-- Windows:
								<graphvizdot>C:\Program Files (x86)\Graphviz2.38\bin\dot.exe</graphvizdot>
							-->
							<!-- *nix :
								<graphvizdot>/usr/local/bin/dot</graphvizdot>
							-->
						</attributes>
					</asciidoc>
				</configuration>
				<dependencies>
					<dependency>
						<!-- Docs Maven Skin -->
						<groupId>com.github.ktarou</groupId>
						<artifactId>bulma-maven-skin</artifactId>
						<version>0.0.0-SNAPSHOT</version>
					</dependency>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor.maven.plugin.version}</version>
					</dependency>
					<!-- Comment this section to use the default jruby artifact provided by the plugin -->
					<!--<dependency>
						<groupId>org.jruby</groupId>
						<artifactId>jruby-complete</artifactId>
						<version>${jruby.version}</version>
					</dependency>-->
					<!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
					<!--<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj</artifactId>
						<version>${asciidoctorj.version}</version>
					</dependency>-->
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-diagram</artifactId>
						<version>1.5.11</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>${site.plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-invoker-plugin</artifactId>
					<version>3.0.1</version>
				</plugin>
				<!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${resources.plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.7.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.20.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven.project.info.reports.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.7</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<!-- To avoid slow builds. See here: http://whatiscomingtomyhead.wordpress.com/2011/04/20/if-your-maven-site-build-is-too-slow/ -->
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>summary</report>
							<report>scm</report>
							<report>team</report>
							<report>dependencies</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.1</version>
				<reportSets>
					<reportSet><!-- aggregate reportSet, to define in poms having modules -->
						<id>aggregate</id>
						<inherited>false</inherited><!-- don't run aggregate in child modules -->
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>run-its</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<configuration>
							<debug>true</debug>
							<projectsDirectory>src/it</projectsDirectory>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<preBuildHookScript>setup</preBuildHookScript>
							<postBuildHookScript>verify</postBuildHookScript>
							<localRepositoryPath>${project.build.directory}/local-repo
							</localRepositoryPath>
							<settingsFile>src/it/settings.xml</settingsFile>
							<pomIncludes>
								<pomInclude>*/pom.xml</pomInclude>
							</pomIncludes>
							<goals>
								<goal>site</goal>
							</goals>
						</configuration>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>install</goal>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>minify</id>
			<build>
				<resources>
					<!-- exclude css and js since will include the minified version -->
					<resource>
						<directory>${basedir}/src/main/resources</directory>
						<excludes>
							<exclude>css/**</exclude>
							<exclude>js/**</exclude>
						</excludes>
						<filtering>true</filtering> <!-- add skin-info -->
					</resource>

					<!-- include the print.css -->
					<resource>
						<directory>
							/home/herve/projets/maven/git/aggregator/archetypes/target/checkout/maven-archetype-site-skin/src/main/resources
						</directory>
						<includes>
							<include>css/print.css</include>
						</includes>
					</resource>

					<!-- include minified only -->
					<resource>
						<directory>${project.build.directory}/${project.build.finalName}</directory>
						<includes>
							<include>css/materialize-maven-skin-${project.version}.min.css</include>
							<include>js/materialize-maven-skin-${project.version}.min.js</include>
						</includes>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>com.samaxes.maven</groupId>
						<artifactId>maven-minify-plugin</artifactId>
						<version>1.3.5</version>
						<executions>
							<execution>
								<id>default-minify</id>
								<phase>generate-resources</phase>
								<configuration>
									<webappSourceDir>${basedir}/src/main/resources</webappSourceDir>
									<cssSourceDir>css</cssSourceDir>
									<cssSourceFiles>
										<cssSourceFile>maven-base.css</cssSourceFile>
										<cssSourceFile>maven-theme.css</cssSourceFile>
									</cssSourceFiles>
									<cssFinalFile>materialize-maven-skin-${project.version}.css
									</cssFinalFile>
									<!--jsSourceDir>js</jsSourceDir>
									<jsSourceFiles>
									  <jsSourceFile>fluido.js</jsSourceFile>
									</jsSourceFiles>
									<jsFinalFile>materialize-maven-skin-${project.version}.js</jsFinalFile-->
								</configuration>
								<goals>
									<goal>minify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
